name: Build NET Framework/Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Restore packages
      run: |
           dotnet restore
           for s in SistemaDeAparcamiento Anaconda Palindromo MostRepeatedLetter PrimeNumber DivisorsAndSum Codewars SatelliteMessages MarsRover ArrayReordering LegacyAppRefactor; do
               dotnet restore $s/$s.sln
           done

    - name: Install Coverlet
      run: dotnet tool install --global coverlet.console

    - name: Build solutions
      run: |
           dotnet build --configuration Debug --no-restore /p:DefineConstants="CI_CONTEXT"
           for s in SistemaDeAparcamiento Anaconda Palindromo MostRepeatedLetter PrimeNumber DivisorsAndSum Codewars SatelliteMessages MarsRover ArrayReordering LegacyAppRefactor; do
               dotnet build --configuration Debug --no-restore $s/$s.sln /p:DefineConstants="CI_CONTEXT"
           done

    - name: Testing NET Standalone Programs
      run: |
           coverlet SistemaDeAparcamiento/SistemaDeAparcamiento.Tests/bin/Debug/net7/SistemaDeAparcamiento.Tests.dll --target "dotnet" --targetargs "test SistemaDeAparcamiento/SistemaDeAparcamiento.Tests/SistemaDeAparcamiento.Tests.csproj --no-build --verbosity quiet" --format OpenCover --output sistemadeaparcamiento.coverage.xml
           coverlet LegacyAppRefactor/LegacyApp.UnitTests/bin/Debug/net7.0/LegacyApp.UnitTests.dll --target "dotnet" --targetargs "test LegacyAppRefactor/LegacyApp.UnitTests/LegacyApp.UnitTests.csproj --no-build --verbosity quiet" --format OpenCover --output legacyapprefactor.coverage.xml
           for s in Anaconda Palindromo MostRepeatedLetter PrimeNumber DivisorsAndSum SatelliteMessages MarsRover ArrayReordering; do
               coverlet $s/$s.UnitTests/bin/Debug/net7/$s.UnitTests.dll --target "dotnet" --targetargs "test $s/$s.UnitTests/$s.UnitTests.csproj --no-build --verbosity quiet" --format OpenCover --output $s.coverage.xml
           done

    - name: Testing Codewars
      run: |
           for t in `ls -d1 ./Codewars/[0-9]kyu`; do
               n=$(basename $t)
               for s in `find ./Codewars/$n -maxdepth 1 -type d -printf "%f\n" | grep -v "kyu"`; do
                   coverlet Codewars/$n/$s/$s.UnitTests/bin/Debug/net7.0/$s.UnitTests.dll --target "dotnet" --targetargs "test Codewars/$n/$s/$s.UnitTests/$s.UnitTests.csproj --no-build --verbosity quiet" --format OpenCover --output $s.coverage.xml
               done
           done

    - name: Upload coverage to CodeCov
      run: bash <(curl -s https://codecov.io/bash)

    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: ./*.coverage.xml
